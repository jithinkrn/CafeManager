// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240915141504_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Cafe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cafes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56eb7231-f7c3-47ed-aa2c-39998baa19b8"),
                            Description = "A cozy cafe serving artisanal coffee in the heart of Tanjong Pagar.",
                            Location = "Tanjong Pagar",
                            Logo = "/uploads/sampleLogo/1_C_logo.jpg",
                            Name = "The Daily Grind"
                        },
                        new
                        {
                            Id = new Guid("f55d1098-a532-4822-9f5c-0d6678e815fc"),
                            Description = "A modern cafe with a relaxing atmosphere, located in the bustling Orchard Road.",
                            Location = "Orchard Road",
                            Logo = "/uploads/sampleLogo/2_B_logo.jpg",
                            Name = "Brew & Co."
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<Guid?>("CafeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CafeId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = "UI1234567",
                            CafeId = new Guid("56eb7231-f7c3-47ed-aa2c-39998baa19b8"),
                            EmailAddress = "john.tan@dailygrind.com",
                            Gender = "Male",
                            Name = "John Tan",
                            PhoneNumber = "91234567",
                            StartDate = new DateTime(2022, 9, 15, 22, 15, 3, 690, DateTimeKind.Local).AddTicks(5977)
                        },
                        new
                        {
                            Id = "UI2345678",
                            CafeId = new Guid("56eb7231-f7c3-47ed-aa2c-39998baa19b8"),
                            EmailAddress = "jane.lim@dailygrind.com",
                            Gender = "Female",
                            Name = "Jane Lim",
                            PhoneNumber = "81234567",
                            StartDate = new DateTime(2023, 9, 15, 22, 15, 3, 690, DateTimeKind.Local).AddTicks(5997)
                        },
                        new
                        {
                            Id = "UI3456789",
                            CafeId = new Guid("f55d1098-a532-4822-9f5c-0d6678e815fc"),
                            EmailAddress = "alice.wong@brewco.com",
                            Gender = "Female",
                            Name = "Alice Wong",
                            PhoneNumber = "82234567",
                            StartDate = new DateTime(2024, 3, 15, 22, 15, 3, 690, DateTimeKind.Local).AddTicks(5999)
                        });
                });

            modelBuilder.Entity("Employee", b =>
                {
                    b.HasOne("Cafe", "Cafe")
                        .WithMany("Employees")
                        .HasForeignKey("CafeId");

                    b.Navigation("Cafe");
                });

            modelBuilder.Entity("Cafe", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
